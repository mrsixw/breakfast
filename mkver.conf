# prefix for tags in git
tagPrefix: v
# defaults are used if they are not overriden by a branch config
defaults {
  # whether to really tag the branch when `git mkver tag` is called
  tag: false
  # message for annotated version tags in git
  tagMessageFormat: "release {Tag}"
  # format tring for the pre-release. The format must end with {PreReleaseNumber} if it is used.
  # Examples:
  # * alpha
  # * SNAPSHOT
  # * RC{PreReleaseNumber}
  # * pre-{CommitsSinceTag}
  preReleaseFormat: "RC{PreReleaseNumber}"
  # format string to be used for the build metadata
  buildMetaDataFormat: "{Branch}.{ShortHash}"
  # whether to include the build metadata in the Semantic Version when next or tag are called
  includeBuildMetaData: true
  # action to take, if after analyzing all commit messages since the last tag
  # no increment instructions can be found. Options are:
  # * Fail - application will exit
  # * IncrementMajor - bump the major version
  # * IncrementMinor - bump the minor version
  # * IncrementPatch - bump the patch version
  # * NoIncrement - no version change will occur
  whenNoValidCommitMessages: IncrementMinor
  # list of patches to be applied when `git mkver patch` is called
  patches: [
    PythonSetup
  ]
}
patches: [
  {
    name: PythonSetup
    filePatterns: [
      "setup.py"
    ]
    replacements: [
      {
        find: "version=\"{VersionRegex}\""
        replace: "version=\"{Version}\""
      }
    ]
  }
]